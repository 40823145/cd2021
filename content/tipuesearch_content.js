var tipuesearch = {"pages": [{'title': 'About', 'text': 'GitHub: https://github.com/40823145/cd2021 \n YouTube: https://www.youtube.com/channel/UCVtMNqfQf9l-XS-9VgD1nog?view_as=subscriber \n', 'tags': '', 'url': 'About.html'}, {'title': 'Copperation', 'text': '協同設計與版次管理能夠有效提升團隊工作效率，降低內容互相覆蓋，最終造成無法辨識是誰更改內容的情況。 \n \n 領導主幹設立項目Project所需目標要求，主導至最終完成，協作者分支Branch由主幹分配負責工作區或衍生不同設計，各分支皆達到目標需求後合併回主幹，方能生產項目。 \n \n 因協作者的工作與內容更動皆在獨立分支清清楚楚，責任歸屬的也就一目了然。 \n 分支出來的設計，在本次目標不需要，或許未來的項目可以用上。可以避免掉「當初做過，但改掉了，這次又要重做」這種事情發生 \n \n 組長在倉儲Setting->Manage access->Invite a collaborato邀請協作者 \n 組員在自己倉儲中Setting->Manage access->Invite a collaborato組長(組員不用互邀) \n git clone --recurse-submodules https://github.com/a40823112/stage2-ag1.git stage2-ag1 (clone組長倉儲)\ncd stage2-ag1\ngit remote add 40823145 https://github.com/40823145/stage2-ag1.git (add自己倉儲)\n \n', 'tags': '', 'url': 'Copperation.html'}, {'title': 'Midterm', 'text': '', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Week 1', 'text': '', 'tags': '', 'url': 'Week 1.html'}, {'title': 'Create New repository and Wecsite', 'text': 'step1. Download protable system \n \xa0 Go to   2021 可攜程式系統 \n First download the  下載 kmol2021_spring_v2.7z  compressed file , and extract the file to the flash drive. \n step2. \n Set  .gitconfig  and save this file in the "home" directory \n \n step3. Use cmstemplate  \n Go to  mdecourse / cmstemplate \n Click  Use the template \n \n Repository name:cd2021 \n Click  Create new repository from template \n \n step4. G it clone \n Go to the github website git clone the URL of your own storage \n git clone --recurse-submodules https://github.com/40823145/cd2021.git \n \n Upgrade pip and install plugins \n step5. Github pages \n \n Restart protable system,input in cmd \n cd tmp\ncd cd2021\ncd cmsimde\npython wsgi.py \n Search  https://localhost:9443/  in the browser \n tip:http"s" \n \n', 'tags': '', 'url': 'Create New repository and Wecsite.html'}, {'title': 'Week 2', 'text': '分組亂數排序(失敗) \n import random\nimport requests\nfrom bs4 import BeautifulSoup\n\nresponse = requests.get(\n    "https://ethercalc.net/awlfom9374eg_rqqa77ezdfrl/app")\nsoup = BeautifulSoup(response.text, "html.parser")\nresult = soup.find("tr","td")\n#random.shuffle(result)\nprint(result)\n\n\n \n', 'tags': '', 'url': 'Week 2.html'}, {'title': 'Week 3', 'text': '', 'tags': '', 'url': 'Week 3.html'}, {'title': 'upgrade cmsimde', 'text': 'git pull origin master\n \n \n Copy the new file to Y:\\tmp\\cd2021> \n \n cmsimde connection method \n cd tmp\\cd2021\ncms\n \n \n push \n cd tmp\\cd2021\nacp "更新內容"\n \n \n', 'tags': '', 'url': 'upgrade cmsimde.html'}, {'title': 'Webot basic operation', 'text': '\n', 'tags': '', 'url': 'Webot basic operation.html'}, {'title': 'stage3', 'text': '', 'tags': '', 'url': 'stage3.html'}, {'title': 'Task1', 'text': '讀取 stage3_2a.txt, 建立 Stage3 的分組倉儲, 分組網頁, 以及各組員倉儲及網頁連結. \n 已知 \xa0 stage3_2a.txt 內容, 以及初步資料讀取程式: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n \n \n \n # open file, default is read mode, since txt content no chinese char4 \n # no encoding = "UTF-08" is needed \n with  open ( "stage3_2a.txt" ) as fh: \n \xa0\xa0\xa0\xa0 # readlines will read into the whole line and put into list format 23 \n \xa0\xa0\xa0\xa0 # has \\n at the end of each line 13 \n \xa0\xa0\xa0\xa0 data  =   fh.readlines() \n \xa0\xa0\xa0\xa0 data  =   [a.replace( \'4823122\' , \'40823122\' )  for   a  in   data] \n \xa0\xa0\xa0\xa0 data  =   [c.replace( \'\\t\\t\\t\\t\' ,\'\')  for   c  in   data] \n \xa0\xa0\xa0\xa0 print (data) \n #print(len(data))1 \n for   i  in   range ( len (data)): \n \xa0\xa0\xa0\xa0 group  =   data[i].rstrip( "\\n" ).split( "\\t" ) \n \xa0\xa0\xa0\xa0 print ( \'<p>\' + group[ 0 ] + \'|<a href="https://\' + group[ 1 ] + \'.github.io/stage3-ag\' + group[ 0 ][ 9 ] + \'">網站</a>|<a href="https://github.com/\' + group[ 2 ] + \'/stage3-ag\' + group[ 0 ][ 9 ] + \'">倉儲</a></p>\' ) \n # the following will use group data to generate needed html \n \xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 for   j  in   range ( 2 , 18 , 2 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( \'<p>\' + group[j] + \'|Website:\' + \'<a href="https://\' + group[j] + \'.github.io/cd2021\' + \'">\' + group[j] + \'</a>\' + \'|Repository:\' + \'<a href="https://github.com/\' + group[j] + \'/cd2021\' + \'">\' + group[j] + \'</a></p>\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 continue \n \n \n \n \n \n \n \n 程式解說 \n \n \n \n \n \n \n 1 \n \n \n \n with  open ( "stage3_2a.txt" ) as fh: \n \n \n \n \n \n \n \n 開啟檔案 stage3_2a \n \n \n \n \n \n \n 1 \n \n \n \n data  =   fh.readlines() \n \n \n \n \n \n \n \n 讀取所有行(直到結束) \n \n \n \n \n \n \n 1 \n \n \n \n data  =   [a.replace( \'4823122\' , \'40823122\' )  for   a  in   data] \n \n \n \n \n \n \n \n 把字符串中的old（舊字符串） 替換成new(新字符串) a.replace( \'須改的\' , \'更改成的\',更改次數 ) \n \n \n \n \n \n \n 1 \n \n \n \n data  =   [c.replace( \'\\t\\t\\t\\t\' ,\'\')  for   c  in   data] \n \n \n \n \n \n \n \n ( \'\\t\\t\\t\\t\' ,\'\')將排序出來的結果作空格 \n \n \n \n \n \n \n 1 \n 2 \n \n \n \n for   i  in   range ( len (data)): \n \xa0\xa0\xa0\xa0 group  =   data[i].rstrip( "\\n" ).split( "\\t" ) \n \n \n \n \n \n \n \n 分析檔案範圍有六組，進行迴圈，變數為i \n 將data列表中第i項，去除元素\\n(換行)利用\\t(空格)分割 \n \n \n \n \n \n \n 1 \n \n \n \n print ( \'<p>\' + group[ 0 ] + \'|<a href="https://\' + group[ 1 ] + \'.github.io/stage3-ag\' + group[ 0 ][ 9 ] + \'">網站</a>|<a href="https://github.com/\' + group[ 2 ] + \'/stage3-ag\' + group[ 0 ][ 9 ] + \'">倉儲</a></p>\' ) \n \n \n \n \n \n \n \n group[0][9]=第0個第9位 \n print出group list 中的元素，放入html格式，依序列出 \n \n \n \n \n \n \n 1 \n \n \n \n for   j  in   range ( 2 , 18 , 2 ): \n \n \n \n \n \n \n \n 從2開始每次跳2格最多跳到16不可超過18 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( \'<p>\' + group[j] + \'|Website:\' + \'<a href="https://\' + group[j] + \'.github.io/cd2021\' + \'">\' + group[j] + \'</a>\' + \'|Repository:\' + \'<a href="https://github.com/\' + group[j] + \'/cd2021\' + \'">\' + group[j] + \'</a></p>\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 continue \n \n \n \n \n \n \n \n 用print出group list 中的元素，放入html格式，依序列出來 \n 列出各分組倉儲, 分組網站與學員倉儲及學員網站連結: \n stage3_ag1 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823131 | Website: 40823131 \xa0 | Repository: 40823131 \xa0 | Group Website: 40823131 \n a40823112 | Website: a40823112 \xa0 | Repository: a40823112 \xa0 | Group Website: a40823112 \n 40823123 | Website: 40823123 \xa0 | Repository: 40823123 \xa0 | Group Website: 40823123 \n 40823145 | Website: 40823145 \xa0 | Repository: 40823145 \xa0 | Group Website: 40823145 \n 40823136 | Website: 40823136 \xa0 | Repository: 40823136 \xa0 | Group Website: 40823136 \n 40823109 | Website: 40823109 \xa0 | Repository: 40823109 \xa0 | Group Website: 40823109 \n 40823116 | Website: 40823116 \xa0 | Repository: 40823116 \xa0 | Group Website: 40823116 \n 40823108 | Website: 40823108 \xa0 | Repository: 40823108 \xa0 | Group Website: 40823108 \n stage3_ag2 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823151 | Website: 40823151 \xa0 | Repository: 40823151 \xa0 | Group Website: 40823151 \n 40623121 | Website: 40623121 \xa0 | Repository: 40623121 \xa0 | Group Website: 40623121 \n 40871106 | Website: 40871106 \xa0 | Repository: 40871106 \xa0 | Group Website: 40871106 \n 40823102 | Website: 40823102 \xa0 | Repository: 40823102 \xa0 | Group Website: 40823102 \n 40823104 | Website: 40823104 \xa0 | Repository: 40823104 \xa0 | Group Website: 40823104 \n 40823106 | Website: 40823106 \xa0 | Repository: 40823106 \xa0 | Group Website: 40823106 \n 40823101 | Website: 40823101 \xa0 | Repository: 40823101 \xa0 | Group Website: 40823101 \n 40823132 | Website: 40823132 \xa0 | Repository: 40823132 \xa0 | Group Website: 40823132 \n stage3_ag3 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823119 | Website: 40823119 \xa0 | Repository: 40823119 \xa0 | Group Website: 40823119 \n 40823150 | Website: 40823150 \xa0 | Repository: 40823150 \xa0 | Group Website: 40823150 \n 40823103 | Website: 40823103 \xa0 | Repository: 40823103 \xa0 | Group Website: 40823103 \n 40823107 | Website: 40823107 \xa0 | Repository: 40823107 \xa0 | Group Website: 40823107 \n 40523252 | Website: 40523252 \xa0 | Repository: 40523252 \xa0 | Group Website: 40523252 \n 40823154 | Website: 40823154 \xa0 | Repository: 40823154 \xa0 | Group Website: 40823154 \n stage3_ag4 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823142 | Website: 40823142 \xa0 | Repository: 40823142 \xa0 | Group Website: 40823142 \n 40823144 | Website: 40823144 \xa0 | Repository: 40823144 \xa0 | Group Website: 40823144 \n 40823127 | Website: 40823127 \xa0 | Repository: 40823127 \xa0 | Group Website: 40823127 \n 40823148 | Website: 40823148 \xa0 | Repository: 40823148 \xa0 | Group Website: 40823148 \n 40823121 | Website: 40823121 \xa0 | Repository: 40823121 \xa0 | Group Website: 40823121 \n 40823135 | Website: 40823135 \xa0 | Repository: 40823135 \xa0 | Group Website: 40823135 \n 40823114 | Website: 40823114 \xa0 | Repository: 40823114 \xa0 | Group Website: 40823114 \n 40823146 | Website: 40823146 \xa0 | Repository: 40823146 \xa0 | Group Website: 40823146 \n stage3_ag5 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823111 | Website: 40823111 \xa0 | Repository: 40823111 \xa0 | Group Website: 40823111 \n 40823115 | Website: 40823115 \xa0 | Repository: 40823115 \xa0 | Group Website: 40823115 \n 40823128 | Website: 40823128 \xa0 | Repository: 40823128 \xa0 | Group Website: 40823128 \n 40823120 | Website: 40823120 \xa0 | Repository: 40823120 \xa0 | Group Website: 40823120 \n 40823140 | Website: 40823140 \xa0 | Repository: 40823140 \xa0 | Group Website: 40823140 \n 40823124 | Website: 40823124 \xa0 | Repository: 40823124 \xa0 | Group Website: 40823124 \n 40823139 | Website: 40823139 \xa0 | Repository: 40823139 \xa0 | Group Website: 40823139 \n 40823126 | Website: 40823126 \xa0 | Repository: 40823126 \xa0 | Group Website: 40823126 \n stage3_ag6 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823152 | Website: 40823152 \xa0 | Repository: 40823152 \xa0 | Group Website: 40823152 \n 40823110 | Website: 40823110 \xa0 | Repository: 40823110 \xa0 | Group Website: 40823110 \n 40823122 | Website: 40823122 \xa0 | Repository: 40823122 \xa0 | Group Website: 40823122 \n 40823125 | Website: 40823125 \xa0 | Repository: 40823125 \xa0 | Group Website: 40823125 \n 40823117 | Website: 40823117 \xa0 | Repository: 40823117 \xa0 | Group Website: 40823117 \n 40823129 | Website: 40823129 \xa0 | Repository: 40823129 \xa0 | Group Website: 40823129 \n 40823149 | Website: 40823149 \xa0 | Repository: 40823149 \xa0 | Group Website: 40823149 \n 40823153 | Website: 40823153 \xa0 | Repository: 40823153 \xa0 | Group Website: 40823153 \n \n', 'tags': '', 'url': 'Task1.html'}, {'title': 'Task2', 'text': 'RemoteAPI \n Python3 remote api 程式控制Coppeliasim 需要  sim.py ,  simConst.py  與  remoteApi.dll  等三個檔案，將三個檔案與要操控的.py檔放在同一個資料夾中 \n \n 將.py放入編譯器修改 \n \n', 'tags': '', 'url': 'Task2.html'}, {'title': 'W13', 'text': '為因應校方公告: \n 「嚴重特殊傳染性肺炎」疫情課程彈性處理事項_遠距教學公告_0515D(中英版本).pdf \n 5月17日至5月30日全校所有課程改採遠距教學. \n 本課程將在 W13-W14 週採取同步線上模式上課, 請所有修課學員密切注意\xa0 https://gitter.im/mdecourse/cd2021  上之公告, 線上同步上課將採 OBS + Youtube 配合  https://meet.google.com  直播方式進行, 請各學員屆時必須事先登入 github 帳號與 @gm 電子郵箱帳號, 以便在課程直播網站上留言討論. \n 同步直播課程進行過程將指定各組員針對課程內容進行直播操作, 負責直播學員必須即時將直播網址公布於  https://gitter.im/mdecourse/cd2021 , 以便與其他學員及老師進行互動. \n 課程同步直播時段將與上課時段相同, 每段直播中間的暫停時間將視實際情況決定. \n \n 本週小組同步直播 \n \n RoboDK: \n 1.開啟start.bat \n 2.開啟可攜版robodk:E:\\robodk522_portable\\bin\\RoboDK.exe \n 3.robodk開啟檔案選取:E:\\robodk522_portable\\examples\\pick_and_place\\pick_and_place_with_python.rdk \n 4開啟SciTE並將下方路徑檔案放入E:\\robodk522_portable\\examples\\pick_and_place\\pick_and_place.py 點選Tools-->GO \n # KMOLab Portable RoboDK pick and place\nfrom robolink import *    # API to communicate with robodk\nfrom robodk import *      # robodk robotics toolbox\n \n# Setup global parameters\nBALL_DIAMETER = 100 # diameter of one ball\nAPPROACH = 100      # approach distance to grab each part, in mm\nnTCPs = 6           # number of TCP\'s in the tool\n \n#----------------------------------------------\n# Function definitions\n \ndef box_calc(BALLS_SIDE=4, BALLS_MAX=None):\n    """Calculate a list of points (ball center) as if the balls were stored in a box"""\n    if BALLS_MAX is None: BALLS_MAX = BALLS_SIDE**3\n    xyz_list = []\n    for h in range(BALLS_SIDE):\n        for i in range(BALLS_SIDE):\n            for j in range(BALLS_SIDE):\n                xyz_list = xyz_list + [[(i+0.5)*BALL_DIAMETER, (j+0.5)*BALL_DIAMETER, (h+0.5)*BALL_DIAMETER]]\n                if len(xyz_list) >= BALLS_MAX:\n                    return xyz_list\n    return xyz_list\n \ndef pyramid_calc(BALLS_SIDE=4):\n    """Calculate a list of points (ball center) as if the balls were place in a pyramid"""\n    #the number of balls can be calculated as: int(BALLS_SIDE*(BALLS_SIDE+1)*(2*BALLS_SIDE+1)/6)\n    BALL_DIAMETER = 100\n    xyz_list = []\n    sqrt2 = 2**(0.5)\n    for h in range(BALLS_SIDE):\n        for i in range(BALLS_SIDE-h):\n            for j in range(BALLS_SIDE-h):\n                height = h*BALL_DIAMETER/sqrt2 + BALL_DIAMETER/2\n                xyz_list = xyz_list + [[i*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, j*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, height]]\n    return xyz_list\n \ndef balls_setup(frame, positions):\n    """Place a list of balls in a reference frame. The reference object (ball) must have been previously copied to the clipboard."""\n    nballs = len(positions)\n    step = 1.0/(nballs - 1)\n    for i in range(nballs):\n        newball = frame.Paste()\n        newball.setName(\'ball \' + str(i)) #set item name\n        newball.setPose(transl(positions[i])) #set item position with respect to parent\n        newball.setVisible(True, False) #make item visible but hide the reference frame\n        newball.Recolor([1-step*i, step*i, 0.2, 1]) #set RGBA color\n \ndef cleanup_balls(parentnodes):\n    """Delete all child items whose name starts with \\"ball\\", from the provided list of parent items."""\n    todelete = []\n    for item in parentnodes:\n        todelete = todelete + item.Childs()\n \n    for item in todelete:\n        if item.Name().startswith(\'ball\'):\n            item.Delete()\n \ndef TCP_On(toolitem, tcp_id):\n    """Attach the closest object to the toolitem Htool pose,\n    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_On)"""\n    toolitem.AttachClosest()\n    toolitem.RDK().RunMessage(\'Set air valve %i on\' % (tcp_id+1))\n    toolitem.RDK().RunProgram(\'TCP_On(%i)\' % (tcp_id+1));\n         \ndef TCP_Off(toolitem, tcp_id, itemleave=0):\n    """Detaches the closest object attached to the toolitem Htool pose,\n    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_Off)"""\n    toolitem.DetachAll(itemleave)\n    toolitem.RDK().RunMessage(\'Set air valve %i off\' % (tcp_id+1))\n    toolitem.RDK().RunProgram(\'TCP_Off(%i)\' % (tcp_id+1));\n \n \n#----------------------------------------------------------\n# The program starts here:\n \n# Any interaction with RoboDK must be done through RDK:\nRDK = Robolink()\n \n# Turn off automatic rendering (faster)\nRDK.Render(False)\n \n#RDK.Set_Simulation_Speed(500); # set the simulation speed\n \n# Gather required items from the station tree\nrobot = RDK.Item(\'Fanuc M-710iC/50\')\nrobot_tools = robot.Childs()\n#robottool = RDK.Item(\'MainTool\')\nframe1 = RDK.Item(\'Table 1\')\nframe2 = RDK.Item(\'Table 2\')\n \n# Copy a ball as an object (same as CTRL+C)\nballref = RDK.Item(\'reference ball\')\nballref.Copy()\n \n# Run a pre-defined station program (in RoboDK) to replace the two tables\nprog_reset = RDK.Item(\'Replace objects\')\nprog_reset.RunProgram()\n \n# Call custom procedure to remove old objects\ncleanup_balls([frame1, frame2])\n \n# Make a list of positions to place the objects\nframe1_list = pyramid_calc(4)\nframe2_list = pyramid_calc(4)\n \n# Programmatically place the objects with a custom-made procedure\nballs_setup(frame1, frame1_list)\n \n# Delete previously generated tools\nfor tool in robot_tools:\n    if tool.Name().startswith(\'TCP\'):\n        tool.Delete()\n         \n# Calculate tool frames for the suction cup tool of 6 suction cups\nTCP_list = []\nfor i in range(nTCPs):\n    TCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)\n    TCPi = robot.AddTool(TCPi_pose, \'TCP %i\' % (i+1))\n    TCP_list.append(TCPi)\n \nTCP_0 = TCP_list[0]\n \n# Turn on automatic rendering\nRDK.Render(True)\n \n# Move balls    \nrobot.setPoseTool(TCP_list[0])\nnballs_frame1 = len(frame1_list)\nnballs_frame2 = len(frame2_list)\nidTake = nballs_frame1 - 1\nidLeave = 0\nidTCP = 0\ntarget_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)\n \nwhile idTake >= 0:\n    # ------------------------------------------------------------------\n    # first priority: grab as many balls as possible\n    # the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -> nTCPs)\n    ntake = min(nTCPs, idTake + 1)\n \n    # approach to frame 1\n    robot.setPoseFrame(frame1)\n    robot.setPoseTool(TCP_0)\n    robot.MoveJ([0,0,0,0,10,-200])\n    robot.MoveJ(target_app_frame)\n \n    # grab ntake balls from frame 1\n    for i in range(ntake):\n        TCPi = TCP_list[i]\n        robot.setPoseTool(TCPi)\n        # calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted\n        target = transl(frame1_list[idTake])*roty(pi)*rotx(30*pi/180)\n        target_app = target*transl(0,0,-APPROACH)\n        idTake = idTake - 1       \n        robot.MoveL(target_app)\n        robot.MoveL(target)\n        TCP_On(TCPi, i)\n        robot.MoveL(target_app)\n  \n    # ------------------------------------------------------------------\n    # second priority: unload the tool     \n    # approach to frame 2 and place the tool balls into table 2\n    robot.setPoseTool(TCP_0)\n    robot.MoveJ(target_app_frame)\n    robot.MoveJ([0,0,0,0,10,-200])\n    robot.setPoseFrame(frame2)    \n    robot.MoveJ(target_app_frame)\n    for i in range(ntake):\n        TCPi = TCP_list[i]\n        robot.setPoseTool(TCPi)\n        if idLeave > nballs_frame2-1:\n            raise Exception("No room left to place objects in Table 2")\n         \n        # calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted\n        target = transl(frame2_list[idLeave])*roty(pi)*rotx(30*pi/180)\n        target_app = target*transl(0,0,-APPROACH)\n        idLeave = idLeave + 1       \n        robot.MoveL(target_app)\n        robot.MoveL(target)\n        TCP_Off(TCPi, i, frame2)\n        robot.MoveL(target_app)\n \n    robot.MoveJ(target_app_frame)\n \n# Move home when the robot finishes\nrobot.MoveJ([0,0,0,0,10,-200])', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '', 'tags': '', 'url': 'W14.html'}, {'title': 'MTB_Robot', 'text': "1 \n 手臂程式: \n function sysCall_init()\n    corout=coroutine.create(coroutineMain)\nend\n  \nfunction sysCall_actuation()\n    if coroutine.status(corout)~='dead' then\n        local ok,errorMsg=coroutine.resume(corout)\n        if errorMsg then\n            error(debug.traceback(corout,errorMsg),2)\n        end\n    else\n        corout=coroutine.create(coroutineMain)\n    end\nend\n  \nfunction movCallback(config,vel,accel,handles)\n    for i=1,#handles,1 do\n        if sim.getJointMode(handles[i])==sim.jointmode_force and sim.isDynamicallyEnabled(handles[i]) then\n            sim.setJointTargetPosition(handles[i],config[i])\n        else  \n            sim.setJointPosition(handles[i],config[i])\n        end\n    end\nend\n  \nfunction moveToConfig(handles,maxVel,maxAccel,maxJerk,targetConf,enable)\n    local currentConf={}\n    for i=1,#handles,1 do\n        currentConf[i]=sim.getJointPosition(handles[i])\n        targetConf[i]=targetConf[i]*math.pi/180\n    end\n    sim.moveToConfig(-1,currentConf,nil,nil,maxVel,maxAccel,maxJerk,targetConf,nil,movCallback,handles)\n  \n    if enable then\n        sim.writeCustomDataBlock(gripperHandle,'activity','on')\n    else\n        sim.writeCustomDataBlock(gripperHandle,'activity','off')\n    end\nend\n  \nfunction coroutineMain()\n    modelBase=sim.getObjectHandle(sim.handle_self)\n    gripperHandle=sim.getObjectHandle('suctionPad')\n    modelName=sim.getObjectName(modelBase)\n    motorHandles = {}\n    for i=1,4,1 do\n        motorHandles[i]=sim.getObjectHandle('MTB_axis'..i)\n    end\n    local vel=60\n    local accel=10\n    local jerk=10\n    local maxVel={vel*math.pi/180,vel*math.pi/180,vel*math.pi/180,vel*math.pi/180}\n    local maxAccel={accel*math.pi/180,accel*math.pi/180,accel*math.pi/180,accel*math.pi/180}\n    local maxJerk={jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180}\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{0,0,0,0},true)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{0,0,1.9,0},true)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{0,0,-1.9,0},true)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{-160,-43.5,0,203.5},false)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{160,43.5,0,203.5},false)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{160,43.5,1.90,-203.5},true)\n    moveToConfig(motorHandles,maxVel,maxAccel,maxJerk,{160,43.5,-1.90,-203.5},true)\nend \n 吸盤程式: \n function sysCall_init()\n    modelBase=sim.getObjectHandle(sim.handle_self)\n    s=sim.getObjectHandle('suctionPadSensor')\n    l=sim.getObjectHandle('suctionPadLoopClosureDummy1')\n    l2=sim.getObjectHandle('suctionPadLoopClosureDummy2')\n    b=sim.getObjectHandle('suctionPadBodyRespondable')\n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\n    suctionPadLink=sim.getObjectHandle('suctionPadLink')\n    local gripperBase=sim.getObjectHandle(sim.handle_self)\n    infiniteStrength=true\n    maxPullForce=3\n    maxShearForce=1\n    maxPeelTorque=0.1\n  \nend\n  \nfunction sysCall_cleanup() \n    sim.setLinkDummy(l,-1)\n    sim.setObjectParent(l,b,true)\n    m=sim.getObjectMatrix(l2,-1)\n    sim.setObjectMatrix(l,-1,m)\nend\n  \nfunction sysCall_sensing() \n    parent=sim.getObjectParent(l)\n    local on=sim.readCustomDataBlock(modelBase,'activity')=='on'\n    if not on then\n        if (parent~=b) then\n            sim.setLinkDummy(l,-1)\n            sim.setObjectParent(l,b,true)\n            m=sim.getObjectMatrix(l2,-1)\n            sim.setObjectMatrix(l,-1,m)\n        end\n    else\n        if (parent==b) then\n            index=0\n            while true do\n                shape=sim.getObjects(index,sim.object_shape_type)\n                if (shape==-1) then\n                    break\n                end\n                local res,val=sim.getObjectInt32Parameter(shape,sim.shapeintparam_respondable)\n                if (shape~=b) and (val~=0) and (sim.checkProximitySensor(s,shape)==1) then\n                    -- Ok, we found a respondable shape that was detected\n                    -- We connect to that shape:\n                    -- Make sure the two dummies are initially coincident:\n                    sim.setObjectParent(l,b,true)\n                    m=sim.getObjectMatrix(l2,-1)\n                    sim.setObjectMatrix(l,-1,m)\n                    -- Do the connection:\n                    sim.setObjectParent(l,shape,true)\n                    sim.setLinkDummy(l,l2)\n                    break\n                end\n                index=index+1\n            end\n        else\n            -- Here we have an object attached\n            if (infiniteStrength==false) then\n                -- We might have to conditionally beak it apart!\n                result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)\n                if (result>0) then\n                    breakIt=false\n                    if (force[3]>maxPullForce) then breakIt=true end\n                    sf=math.sqrt(force[1]*force[1]+force[2]*force[2])\n                    if (sf>maxShearForce) then breakIt=true end\n                    if (torque[1]>maxPeelTorque) then breakIt=true end\n                    if (torque[2]>maxPeelTorque) then breakIt=true end\n                    if (breakIt) then\n                        -- We break the link:\n                        sim.setLinkDummy(l,-1)\n                        sim.setObjectParent(l,b,true)\n                        m=sim.getObjectMatrix(l2,-1)\n                        sim.setObjectMatrix(l,-1,m)\n                    end\n                end\n            end\n        end\n    end\nend", 'tags': '', 'url': 'MTB_Robot.html'}, {'title': 'gitlab', 'text': '\n Gitlab 同步 \n 要利用 Gitlab 同步位於 Github 上的 CMSiMDE 倉儲與 Github Pages 網頁, 需要注意以下兩個要點: \n \n 完成 \xa0 \xa0 \xa0 帳號申請與驗證. \n 在原先 Github 倉儲中增加一個 .gitlab-ci.yml 檔案, 目的是用來產生與倉儲對應的 Gitlab Pages 網站. \n \n step1. 申請帳號 https://gitlab.com/users/sign_up \n step2.點擊上方加號新增New project -> Create blank project \n \n step3. 把github的資料推到Gitlab上面 \n \n \n \n \n \n \n \n \n \n \n \n Y:\\>cd tmp/cd2021  \n Y:\\tmp\\cd2021>git push gitlab\xa0  \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'gitlab.html'}, {'title': 'W15', 'text': '\n \n We saw this simple two-link robot in the previous lecture about forward kinematics. \n 我們在前面看到了這個簡單的雙連桿機器人關於正向運動學的講座。 \n The tooltip pose of this robot is described simply by two numbers, the coordinates x and y with respect to the world coordinate frame. \n 描述了該機器人的工具提示位姿 簡單地由兩個數字，坐標 x 和 y 相對於世界坐標系。 \n So, the problem here is that given x and y,we want to determine the joined angles, Q1 and Q2. \n 所以，這裡的問題是，給定 x 和 y，我們要確定連接的角度 Q1 和 Q2。 \n The solution that we’re going to follow in this particular section is a geometric one. \n 我們將遵循的解決方案在這個特定的部分是一個幾何一。 \n We’re going to start with a simple piece of construction. \n 我們將從一個簡單的作品開始的建設。  \n We’re going to overlay the red triangle on top of our robot. \n 我們將覆蓋紅色三角形在我們的機器人之上。 \n We know that the end point coordinate is x, y, so the vertical height of the triangle is y, the horizontal width is x. \n 我們知道終點坐標是x， y，所以三角形的垂直高度 是 y，水平寬度是 x。 \n And, using Pythagoras theorem, we can writer squared equals x squared plus y squared. \n 並且，使用畢達哥拉斯定理，我們可以寫出 r 平方等於 x 平方加上 y 平方。 Now, we’re going to look at this triangle highlighted here in red and we want to determine the angle alpha. \n 現在，我們要看看這個三角形 此處以紅色突出顯示，我們想確定 角度α。 \n In order to do that, we need to use the cosine rule. \n 為了做到這一點，我們需要使用餘弦規則。 And, if you’re a little rusty on the cosine rule, here is a bit of a refresher. \n 而且，如果你對余弦有點生疏 規則，這裡有一點複習。 \n We have an arbitrary triangle. \n 我們有一個任意三角形。 \n We don’t have to have any right angles in it and we’re going to label the length of this edge as A and the angle opposite that edge, we’re going to label as little a. \n  我們不必有任何直角 它，我們將標記長度 這條邊作為 A 和相反的角度 邊緣，我們將標記為小 a。 \n And, we do the same for this edge and this angle, and this edge and this angle. \n 而且，我們對這條邊和這條邊做同樣的事情 角度，還有這條邊和這個角。 \n So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little a, little b, and little c. \n 所以，總而言之，雙方都被標記為首都 A、B 和 C，角度標記為小 a、小b和小c。 \n So, the cosine rule is simply this relationship here. \n 所以，餘弦規則就是這種關係 這裡。 \n It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos a in it. \n 這有點像畢達哥拉斯定理，除了 對於這個額外的術語，最後的 cos 一個在裡面。 \n Now, let’s apply the cosine rule to the particular triangle we looked at a moment ago. \n 現在，讓我們將餘弦規則應用於我們看了一會兒特定的三角形前。  \n It’s pretty straightforward to write down this particular relationship. \n 寫下來很簡單這種特殊的關係。 \n We can isolate the term cos alpha which gives us the angle alpha that we’re interested in. \n 我們可以隔離術語 cos alpha，它給出我們感興趣的角度α 在。 \n And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y. \n 而且，它是根據常數定義的鏈接長度，A1 和 A2 以及位置末端執行器，x 和 y。 \n We can write this simple relationship between the angles alpha and Q2. \n 我們可以寫出這個簡單的關係角α和Q2。  \n And, we know from the shape of the cosine function that cos of Q2 must be equal to negative of cos alpha. \n 而且，我們從餘弦的形狀知道 Q2 的 cos 必須等於負的函數 cos 阿爾法。 This time, let’s just write an expression for the cosine of the joined angle Q2. \n 這一次，我們只寫一個表達式對於連接角 Q2 的餘弦。 \n Now, we’re going to draw yet another red triangle and we’re going apply some simple trigonometry here. \n 現在，我們要再畫一個紅色 三角形，我們將應用一些簡單的 三角函數在這裡。 \n If we know Q2, then we know this length and this length of the red triangle. \n 如果我們知道 Q2，那麼我們就知道這個長度和這個紅色三角形的長度。 We can write this relationship for the sine of the joined angle Q2. \n  我們可以把這個關係寫成正弦 的連接角 Q2。 \n Now, we can consider this bigger triangle whose angle is beta and this side length of the triangle is given here in blue. \n 現在，我們可以考慮這個更大的三角形 其角為β，此邊長為 三角形在這里以藍色給出。 \n And, the length of the other side of the triangle is this. \n  並且，這是三角形另一邊的長度。 \n So, now we can write an expression for the angle beta in terms of these parameters here. \n 所以，現在我們可以寫一個表達式 這裡的這些參數的角度β。 \n Going back to the red triangle that we drew earlier, we can establish a relationship between Q1 and the angle beta. \n 回到我們畫的紅色三角形之前，我們可以建立之間的關係 Q1 和角β。 \n Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y. \n 介紹另一個角度，這個伽馬我們可以寫出之間的關係角度伽馬和工具提示坐標 x 和y。 \n Now, we can write a simple relationship between the angles that we’ve constructed, gamma and beta and the joined angle we’re interested in which is Q1. \n 現在，我們可以寫出一個簡單的關係我們構建的角度，伽馬和 beta 以及我們感興趣的連接角其中是 Q1。 \n And, the total relationship looks something like this. \n 而且，總的關係看起來有些東西像這樣。 \n Quite a complex relationship, it gives us the angle of joined one, that’s Q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s also a function of the second joint angle, Q2. \n 相當複雜的關係，它給了我們連接的角度，即 Q1 末端執行器坐標 y 和 x，以及一堆常量，a1 和 a2，它是也是第二關節角度的函數， Q2。 \n So, let’s summarize what it is that we have derived here. \n 所以，讓我們總結一下我們有什麼派生於此。  \n We have an expression for the cosine of Q2 and we have an expression for Q1. \n 我們有 Q2 的餘弦表達式 我們有 Q1 的表達式。 \n Now, the cosine function is symmetrical about 0. \n 現在，餘弦函數關於0。 \n So, if we know the value of the cosine of Q2, then there are two possible solutions, a positive angle and a negative angle. \n 所以，如果我們知道餘弦值 Q2，那麼有兩種可能的解決方案， 一個正角和一個負角。  \n We’re going to explicitly choose the positive angle, which means that I can write this expression here. \n 我們將明確選擇積極的角度，這意味著我可以寫出這個表達式這裡。 \n And now, we have what we call the inverse kinematic solution for this two-link robot. \n 現在，我們有了我們所說的逆這個雙連桿機器人的運動學解決方案。 \n We have an expression for the two joined angles, Q1 and Q2 in terms of the end effector pose x and y, and a bunch of constants. \n 我們有兩個連接角的表達式， Q1 和 Q2 在末端執行器姿勢方面 x 和 y，以及一堆常量。 \n You notice that the two equations are not independent. \n 你注意到這兩個方程不是獨立的。 \n The equation for Q1, in fact, depends on the solution for Q2. \n 事實上，Q1 的方程取決於 Q2 的解決方案。 In this case, Q2 is negative and we’re going to write the solution for Q2 with a negative sign in front of the inverse cosine. \n 在這種情況下，Q2 是負數，我們將用負數寫出 Q2 的解符號在反餘弦前面。 \n Now, we need to solve for Q1, so we’re going to introduce this particular red triangle, the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x. \n 現在，我們需要解決 Q1，所以我們要介紹這個特殊的紅色三角形， 我們之前求解的角度β， 以及用術語定義的角度伽馬 y 和 x。 \n Now, we write a slightly different relationship between Q1, gamma and beta, different to what we had before. \n 現在，我們寫一個稍微不同的關係在 Q1、gamma 和 beta 之間，與什麼不同我們以前有過。 \n There’s a change of sign involved. \n 涉及到符號的變化。 \n Then, we can substitute all that previous equation and come up with this expression for Q1. \n 然後，我們可以替換之前的所有方程並提出這個表達式對於 Q1。 Again, there is a change of sign here. \n 同樣，這裡的符號發生了變化。 Previously, this was a negative sign. \n 以前，這是一個負面信號。 \n And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where Q2 is negative. \n 而且，這裡是總結形式的解決方案對於我們的雙連桿的逆運動學當機器人處於這種特定配置時， 其中 Q2 為負。 \n Let’s compare the two solutions. \n 讓我們比較這兩種解決方案。 \n The case where Q2 is positive and the case where Q2 is negative. \n 案子 其中 Q2 為正，Q2 為正的情況 是否定的。   \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '', 'tags': '', 'url': 'W16.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': 'Upgrade pip', 'text': 'Install plugins(in cmd): \n pip install flask flask_cors bs4 markdown pelican leo\n \n Upgrade pip(in cmd): \n python -m pip install --upgrade pip\n \n', 'tags': '', 'url': 'Upgrade pip.html'}, {'title': 'ssh', 'text': 'input in cmd \n sh\nssh-keygen -t rsa -b 4096 -C "學號"\n \n \n Stored in the  y:\\hom\\.ssh  directory by default \n \n Use puttygen to import private key ( id_ras ) and convert it to ( .ppk ) file \n \n Use scite to open the public key ( id_rsa.pub ), go to tool->Options->Wrap to see the complete file content \n Copy all, paste in github setting->SSH and GPG keys->New SSH key\xa0 \n \n Open putty.exe \n Input github.com, Click SSH->Auth \n Click Browes to find ( .ppk ) in the .ssh directory   \n \n \n Enter Y:\\tmp\\cd2021\\.git and modify the  config  file to  git@github.com:40823145/cd2021.git   \n \n Finish \n \n', 'tags': '', 'url': 'ssh.html'}, {'title': 'Leo Editor', 'text': 'Open Leo: \n Y:/cd tmp\nleo\n \n File->Open-Outline \n Select Y:\\tmp\\cd2021\\config  Select pelican.leo or reveal.leo \n \n', 'tags': '', 'url': 'Leo Editor.html'}, {'title': 'Blog', 'text': 'Add Disqus \n \n Modify the data in the share and remote. \n \n \n Edit template->@edit base.html \n \n Modify markdown \n \n', 'tags': '', 'url': 'Blog.html'}, {'title': 'Reveal', 'text': '\n', 'tags': '', 'url': 'Reveal.html'}, {'title': 'Code', 'text': 'github .stl 3D viewer \n <script src="https://embed.github.com/view/3d/檔案位置"></script> \n', 'tags': '', 'url': 'Code.html'}, {'title': 'test', 'text': '', 'tags': '', 'url': 'test.html'}]};